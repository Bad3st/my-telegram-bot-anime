require('dotenv').config(); // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ .env

const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const fs = require('fs');
const process = require('process');

// –¢–æ–∫–µ–Ω –∏–∑ .env
const token = process.env.BOT_TOKEN;
if (!token) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–∫–∞–∂–∏—Ç–µ –µ–≥–æ –≤ .env');
    process.exit(1);
}

const bot = new TelegramBot(token, { polling: true });

// –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function logMessage(message) {
    fs.appendFileSync('bot.log', `${new Date().toISOString()} - ${message}\n`);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const firstName = msg.from.first_name || '–±—Ä–æ';
    bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üëã  
–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –∞–Ω–∏–º–µ.
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–Ω–∏–º–µ, –∏ —è —Å–∫–∏–Ω—É —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä! üé¨. –°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞: @Bad3st`);
    logMessage(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${firstName} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.`);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–∏—Å–∫ –∞–Ω–∏–º–µ)
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;

    if (!text || text.startsWith('/')) return;

    bot.sendMessage(chatId, '–ò—â–µ–º –∞–Ω–∏–º–µ... –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ ‚è≥');

try {
    const searchUrl = `https://animego.org/search/all?q=${encodeURIComponent(text)}`;
    const response = await axios.get(searchUrl);
    const html = response.data;

    // –ò—â–µ–º –ø–µ—Ä–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∞–Ω–∏–º–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞
    const regex = /<a class="h5" href="(\/anime\/[^"]+)"[^>]*>(.*?)<\/a>/;
    const match = regex.exec(html);

    if (match) {
        const animeUrl = `https://animego.org${match[1]}`;
        const title = match[2];
        bot.sendMessage(chatId, `–ù–∞—à—ë–ª –¥–ª—è —Ç–µ–±—è! üòé  \nüéå *${title}*  \nüîó [–°–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ AnimeGo](${animeUrl})`);
    } else {
        bot.sendMessage(chatId, 'ü•≤ –ù–µ –Ω–∞—à—ë–ª –∞–Ω–∏–º–µ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º... –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ-–¥—Ä—É–≥–æ–º—É.');
    }
} catch (error) {
    logMessage(`–û—à–∏–±–∫–∞: ${error.message}`);
    bot.sendMessage(chatId, 'üö® –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ —á—É—Ç—å –ø–æ–∑–∂–µ.');
}

});

// –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ —Å–±–æ—è—Ö
process.on('uncaughtException', (err) => {
    logMessage(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${err.message}`);
    console.error('‚ùå –ë–æ—Ç —É–ø–∞–ª, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é...');
    setTimeout(() => process.exit(1), 5000);
});

console.log('üî• –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –ø–æ–∏—Å–∫—É –∞–Ω–∏–º–µ!');
logMessage('üî• –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');

// –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è
setInterval(() => {}, 1000 * 60 * 60);
